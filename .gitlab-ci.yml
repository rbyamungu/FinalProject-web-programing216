image: mcr.microsoft.com/dotnet/sdk:latest

stages:
  - build
  - test
  - deploy

variables:
  OBJECTS_DIRECTORY: 'obj'
  NUGET_PACKAGES_DIRECTORY: '.nuget'
  SOURCE_CODE_PATH: 'HalfAndHalf/'
  DEPLOY_PATH: '/home/${USER}/HalfAndHalf'
  GIT_REPO_URL: '${CI_REPOSITORY_URL}'

cache:
  key: "${CI_COMMIT_REF_SLUG}"
  paths:
    - "${SOURCE_CODE_PATH}${OBJECTS_DIRECTORY}/project.assets.json"
    - "${SOURCE_CODE_PATH}${OBJECTS_DIRECTORY}/*.csproj.nuget.*"
    - "${NUGET_PACKAGES_DIRECTORY}"
  policy: pull-push

before_script:
  - cd ${SOURCE_CODE_PATH}
  - dotnet restore --packages ${NUGET_PACKAGES_DIRECTORY}

build:
  stage: build
  script:
    - dotnet build --no-restore
    - dotnet publish -c Release -o ../publish
  artifacts:
    paths:
      - publish/
      - ${SOURCE_CODE_PATH}bin/
      - ${SOURCE_CODE_PATH}obj/

tests:
  stage: test
  script:
    - dotnet test --no-restore

deploy-server0:
  stage: deploy
  script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_PRIVATE_KEY_HALF_SVR0" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H $DEPLOY_HOST0 >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    # Clone/update repository
    - ssh ${USER}@$DEPLOY_HOST0 "if [ ! -d ${DEPLOY_PATH} ]; then git clone ${GIT_REPO_URL} ${DEPLOY_PATH}; else cd ${DEPLOY_PATH} && git pull; fi"
    # Copy published files
    - scp -r publish/* ${USER}@$DEPLOY_HOST0:${DEPLOY_PATH}/publish/
  only:
    - main
  environment:
    name: production-server0

deploy-server1:
  stage: deploy
  script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_PRIVATE_KEY_HALF_SVR1" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H $DEPLOY_HOST1 >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    # Clone/update repository
    - ssh ${USER}@$DEPLOY_HOST1 "if [ ! -d ${DEPLOY_PATH} ]; then git clone ${GIT_REPO_URL} ${DEPLOY_PATH}; else cd ${DEPLOY_PATH} && git pull; fi"
    # Copy published files
    - scp -r publish/* ${USER}@$DEPLOY_HOST1:${DEPLOY_PATH}/publish/
  only:
    - main
  environment:
    name: production-server1

deploy-server2:
  stage: deploy
  script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_PRIVATE_KEY_HALF_SVR2" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H $DEPLOY_HOST2 >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    # Clone/update repository
    - ssh ${USER}@$DEPLOY_HOST2 "if [ ! -d ${DEPLOY_PATH} ]; then git clone ${GIT_REPO_URL} ${DEPLOY_PATH}; else cd ${DEPLOY_PATH} && git pull; fi"
    # Copy published files
    - scp -r publish/* ${USER}@$DEPLOY_HOST2:${DEPLOY_PATH}/publish/
  only:
    - main
  environment:
    name: production-server2

deploy-server3:
  stage: deploy
  script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_PRIVATE_KEY_HALF_SVR3" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H $DEPLOY_HOST3 >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    # Clone/update repository
    - ssh ${USER}@$DEPLOY_HOST3 "if [ ! -d ${DEPLOY_PATH} ]; then git clone ${GIT_REPO_URL} ${DEPLOY_PATH}; else cd ${DEPLOY_PATH} && git pull; fi"
    # Copy published files
    - scp -r publish/* ${USER}@$DEPLOY_HOST3:${DEPLOY_PATH}/publish/
  only:
    - main
  environment:
    name: production-server3