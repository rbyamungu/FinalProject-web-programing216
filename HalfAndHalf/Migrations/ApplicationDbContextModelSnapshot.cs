// <auto-generated />
using System;
using HalfAndHalf.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HalfAndHalf.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HalfAndHalf.Models.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("company_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CompanyId"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("company_name");

                    b.Property<string>("OrgType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("org_type");

                    b.HasKey("CompanyId");

                    b.ToTable("company", (string)null);
                });

            modelBuilder.Entity("HalfAndHalf.Models.Incident", b =>
                {
                    b.Property<int>("Seqnos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("seqnos");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Seqnos"));

                    b.Property<string>("CallType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("call_type");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("integer")
                        .HasColumnName("company_id");

                    b.Property<DateTime?>("DateTimeComplete")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_time_complete");

                    b.Property<DateTime>("DateTimeReceived")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_time_received");

                    b.Property<string>("DescriptionOfIncident")
                        .HasColumnType("text")
                        .HasColumnName("description_of_incident");

                    b.Property<int?>("FatalityCount")
                        .HasColumnType("integer")
                        .HasColumnName("fatality_count");

                    b.Property<int?>("HospitalizationCount")
                        .HasColumnType("integer")
                        .HasColumnName("hospitalization_count");

                    b.Property<string>("IncidentCause")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("incident_cause");

                    b.Property<int?>("IncidentTrainId")
                        .HasColumnType("integer")
                        .HasColumnName("incident_train_id");

                    b.Property<int?>("InjuryCount")
                        .HasColumnType("integer")
                        .HasColumnName("injury_count");

                    b.Property<int?>("RailroadId")
                        .HasColumnType("integer")
                        .HasColumnName("railroad_id");

                    b.Property<string>("ResponsibleCity")
                        .HasColumnType("text")
                        .HasColumnName("responsible_city");

                    b.Property<string>("ResponsibleState")
                        .HasColumnType("text")
                        .HasColumnName("responsible_state");

                    b.Property<string>("ResponsibleZip")
                        .HasColumnType("text")
                        .HasColumnName("responsible_zip");

                    b.Property<string>("TypeOfIncident")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("type_of_incident");

                    b.HasKey("Seqnos");

                    b.HasIndex("CompanyId");

                    b.HasIndex("IncidentTrainId");

                    b.HasIndex("RailroadId");

                    b.ToTable("incident", (string)null);
                });

            modelBuilder.Entity("HalfAndHalf.Models.IncidentTrain", b =>
                {
                    b.Property<int>("TrainId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("train_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TrainId"));

                    b.Property<string>("NameNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name_number");

                    b.Property<int?>("RailroadId")
                        .HasColumnType("integer")
                        .HasColumnName("railroad_id");

                    b.Property<string>("TrainType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("train_type");

                    b.Property<int?>("railroad_id")
                        .HasColumnType("integer");

                    b.HasKey("TrainId");

                    b.HasIndex("RailroadId");

                    b.ToTable("incident_train", null, t =>
                        {
                            t.Property("railroad_id")
                                .HasColumnName("railroad_id1");
                        });
                });

            modelBuilder.Entity("HalfAndHalf.Models.IncidentTrainCar", b =>
                {
                    b.Property<int>("TrainCarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TrainCarId"));

                    b.Property<string>("CarContent")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CarNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CarType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("IncidentTrainId")
                        .HasColumnType("integer");

                    b.Property<int?>("PositionInTrain")
                        .HasColumnType("integer");

                    b.HasKey("TrainCarId");

                    b.HasIndex("IncidentTrainId");

                    b.ToTable("incident_train_car");
                });

            modelBuilder.Entity("HalfAndHalf.Models.Railroad", b =>
                {
                    b.Property<int>("RailroadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("railroad_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RailroadId"));

                    b.Property<string>("RailroadName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("railroad_name");

                    b.HasKey("RailroadId");

                    b.ToTable("railroad", (string)null);
                });

            modelBuilder.Entity("HalfAndHalf.Models.Incident", b =>
                {
                    b.HasOne("HalfAndHalf.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("incident_company_id_fkey");

                    b.HasOne("HalfAndHalf.Models.IncidentTrain", "IncidentTrain")
                        .WithMany()
                        .HasForeignKey("IncidentTrainId")
                        .HasConstraintName("incident_incident_train_id_fkey");

                    b.HasOne("HalfAndHalf.Models.Railroad", "Railroad")
                        .WithMany()
                        .HasForeignKey("RailroadId")
                        .HasConstraintName("incident_railroad_id_fkey");

                    b.Navigation("Company");

                    b.Navigation("IncidentTrain");

                    b.Navigation("Railroad");
                });

            modelBuilder.Entity("HalfAndHalf.Models.IncidentTrain", b =>
                {
                    b.HasOne("HalfAndHalf.Models.Railroad", "Railroad")
                        .WithMany()
                        .HasForeignKey("RailroadId")
                        .HasConstraintName("incident_train_railroad_id_fkey");

                    b.Navigation("Railroad");
                });

            modelBuilder.Entity("HalfAndHalf.Models.IncidentTrainCar", b =>
                {
                    b.HasOne("HalfAndHalf.Models.IncidentTrain", "IncidentTrain")
                        .WithMany()
                        .HasForeignKey("IncidentTrainId");

                    b.Navigation("IncidentTrain");
                });
#pragma warning restore 612, 618
        }
    }
}
